{"remainingRequest":"C:\\Users\\ThinkPad\\Desktop\\SJProjekat - v2.0\\vue2\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!C:\\Users\\ThinkPad\\Desktop\\SJProjekat - v2.0\\vue2\\src\\components\\CommentsList.vue?vue&type=style&index=0&id=3438583c&scoped=true&lang=css&","dependencies":[{"path":"C:\\Users\\ThinkPad\\Desktop\\SJProjekat - v2.0\\vue2\\src\\components\\CommentsList.vue","mtime":1605019092989},{"path":"C:\\Users\\ThinkPad\\Desktop\\SJProjekat - v2.0\\vue2\\node_modules\\css-loader\\dist\\cjs.js","mtime":499162500000},{"path":"C:\\Users\\ThinkPad\\Desktop\\SJProjekat - v2.0\\vue2\\node_modules\\vue-loader\\lib\\loaders\\stylePostLoader.js","mtime":499162500000},{"path":"C:\\Users\\ThinkPad\\Desktop\\SJProjekat - v2.0\\vue2\\node_modules\\postcss-loader\\src\\index.js","mtime":499162500000},{"path":"C:\\Users\\ThinkPad\\Desktop\\SJProjekat - v2.0\\vue2\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"C:\\Users\\ThinkPad\\Desktop\\SJProjekat - v2.0\\vue2\\node_modules\\vue-loader\\lib\\index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:CgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoNCi5pbnB1dCB7DQogIG1hcmdpbi1ib3R0b206IDEwcHggIWltcG9ydGFudDsNCn0NCg=="},{"version":3,"sources":["CommentsList.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAsGA;AACA;AACA","file":"CommentsList.vue","sourceRoot":"src/components","sourcesContent":["<template>\r\n  <div>\r\n    <b-container>\r\n      <b-form>\r\n        <b-row class=\"mt-2\">\r\n          <b-col sm=\"6\" offset=\"2\" class=\"mx-auto\">\r\n            <b-input\r\n              v-model=\"model\"\r\n              class=\"mb-2 mr-sm-2 mb-sm-0 input\"\r\n              placeholder=\"Enter the phone model\"\r\n            ></b-input>\r\n            <b-button variant=\"warning\" size=\"lg\" @click=\"search\">Search comments</b-button>\r\n          </b-col>\r\n        </b-row>\r\n      </b-form>\r\n    </b-container>\r\n    <b-table\r\n      sticky-header=\"800px\"\r\n      :items=\"comments\"\r\n      head-variant=\"light\"\r\n    ></b-table>\r\n    <b-form>\r\n      <b-row class=\"mt-2\">\r\n        <b-col lg=\"6\" offset=\"2\" class=\"text-center mx-auto\">\r\n          <b-input\r\n            v-model=\"nickname\"\r\n            class=\"mb-2 mr-sm-2 mb-sm-0 mb-2 input\"\r\n            placeholder=\"Enter your nickname\"\r\n          ></b-input>\r\n          <b-form-textarea\r\n            v-model=\"comment\"\r\n            placeholder=\"Enter your comment\"\r\n            class=\"input\"\r\n          ></b-form-textarea>\r\n          <b-button variant=\"warning\" size=\"lg\" @click=\"addNew\">Save</b-button>\r\n        </b-col>\r\n      </b-row>\r\n    </b-form>\r\n      \r\n  </div>\r\n</template>\r\n\r\n<script>\r\n\r\nimport router from \"@/router\";\r\nimport { mapState, mapActions } from 'vuex';\r\n\r\nexport default {\r\n  name: \"CommentsList\",\r\n  computed: {\r\n            ...mapState(['comments'])\r\n        },\r\n\r\n  data() {\r\n    return {\r\n      model: '',\r\n      nickname: '',\r\n      comment: ''\r\n    };\r\n  },\r\n  methods: {\r\n     ...mapActions(['load_comments']),\r\n\r\n    search: function () {\r\n      this.load_comments(this.model);\r\n    },\r\n\r\n    addNew: function () {\r\n      fetch(\"http://localhost:8000/api/comments\", {\r\n        method: \"post\",\r\n        headers: {\r\n          \"Content-Type\": \"application/json\",\r\n        },\r\n        body: JSON.stringify({\r\n          nickname: this.nickname,\r\n          comment: this.comment,\r\n          model: this.model,\r\n        }),\r\n      })\r\n        .then((response) => {\r\n          if (!response.ok) throw response;\r\n\r\n          return response.json();\r\n        })\r\n        .then((jsonData) => {\r\n          this.comments.push(jsonData);\r\n          this.comment = '';\r\n          this.nickname = '';\r\n        })\r\n        .catch((error) => {\r\n          if (typeof error.text === \"function\")\r\n            error.text().then((errorMobile) => {\r\n              alert(errorMobile);\r\n            });\r\n          else alert(error);\r\n        });\r\n    },\r\n  },\r\n};\r\n</script>\r\n\r\n<style scoped>\r\n.input {\r\n  margin-bottom: 10px !important;\r\n}\r\n</style>"]}]}